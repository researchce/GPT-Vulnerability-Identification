import json
import pandas as pd
import os

"""
This script processes CVE version files from a specified directory and generates a database
containing the module and version information. It includes functions to:
- List files in a directory.
- Read and parse JSON files.
- Generate a pandas DataFrame to store the extracted information.

Functions:
- open_cve_version_files: Lists all files in a directory.
- open_cve_version_file: Reads and parses a JSON file.
- generate_database: Generates a database by reading CVE version files and printing their contents.

Usage:
- Ensure the directory containing the CVE version files is specified in dir_path.
- Call generate_database to start the process.
"""

def open_cve_version_files(dir_path):
    res = []
    for path in os.listdir(dir_path):
        # Check if the current path is a file
        if os.path.isfile(os.path.join(dir_path, path)):
            res.append(path)
    return res

def open_cve_version_file(dir_path):
    parsed_json = ''
    with open(dir_path) as user_file:
        file_contents = user_file.read()
        parsed_json = json.loads(file_contents)
    return parsed_json

def generate_database():
    dir_path = 'results/'
    # Create an empty DataFrame object
    database = pd.DataFrame({'Module': pd.Series(dtype='str'),
                             'Version': pd.Series(dtype='str')})
    
    cve_list = open_cve_version_files(dir_path)
    for cve in cve_list:
        cve_version = open_cve_version_file(os.path.join(dir_path, cve))
        print(cve_version)

generate_database()
