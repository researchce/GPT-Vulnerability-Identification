import csv
import random
import time

"""
This script selects a specified number of random rows from a given CSV file and saves them
to a new CSV file. It also measures the time taken to perform this operation.

Functions:
- select_random_rows: Selects random rows from an input CSV file and writes them to an output CSV file.
  Returns the selected rows and the elapsed time.

Usage:
- Specify the input CSV file and the number of rows to select.
- Call select_random_rows with these parameters.
"""

def select_random_rows(input_file, n):
    # List to store selected rows
    selected_rows = []

    # Start timer
    start_time = time.time()

    # Read the input CSV file
    with open(input_file, 'r', newline='', encoding='utf-8') as file:
        reader = csv.DictReader(file)
        rows = list(reader)

        # Check if the number of rows to select is greater than the total number of rows in the file
        if n > len(rows):
            print(f"Warning: The number of rows to select ({n}) is greater than the total number of rows in the file ({len(rows)}).")
            n = len(rows)

        # Select rows randomly
        selected_rows = random.sample(rows, n)

        # Write the selected rows to a new CSV file
        output_file = input_file.replace('.csv', '-selected.csv')
        with open(output_file, 'w', newline='', encoding='utf-8') as outfile:
            writer = csv.DictWriter(outfile, fieldnames=reader.fieldnames)
            writer.writeheader()
            writer.writerows(selected_rows)

    # Stop timer and calculate elapsed time
    end_time = time.time()
    elapsed_time = end_time - start_time

    return selected_rows, elapsed_time

# Example usage
input_file = "../database/cves/2023_cves-purged.csv"
rows_to_select = 3000
selected_rows, elapsed_time = select_random_rows(input_file, rows_to_select)

print(f"\nElapsed time: {elapsed_time} seconds")
