from enum import Enum
from gptCVEChecker import GptCVEChecker

"""
This script defines a proxy class for evaluating software modules against CVE (Common Vulnerabilities and Exposures) descriptions
using different evaluator types. It includes classes to:
- Enumerate the types of evaluators (heuristic and GPT-3 full).
- Proxy the evaluation calls to the appropriate evaluator.

Classes:
- EvaluatorTypes: Enum class for different types of evaluators.
- CveCheckerProxy: Proxy class to handle module evaluation using different evaluators.

Functions:
- evaluate_module: Evaluates a module using the specified evaluator type.
- evaluate_module_heuristic: Placeholder for heuristic evaluation (not implemented).
- evaluate_module_gpt3full: Evaluates a module using GPT-3 full evaluation.

Usage:
- Initialize CveCheckerProxy with the prompt and CVE descriptions.
- Call evaluate_module with the CVE ID, module, version, and evaluator type to get the evaluation result.
"""

class EvaluatorTypes(Enum):
    HEURISTIC = 1
    GPT3FULL = 2

class CveCheckerProxy:
    def __init__(self, prompt, cve_descriptions):
        # Initialize the GPT-3 CVE checker with the provided prompt and descriptions
        self.gptChecker = GptCVEChecker(prompt, cve_descriptions)

    def evaluate_module(self, cve_id, module, version, evaluator):
        # Evaluate a module using the specified evaluator type
        if evaluator == EvaluatorTypes.HEURISTIC:
            return self.evaluate_module_heuristic(cve_id, module, version)
        elif evaluator == EvaluatorTypes.GPT3FULL:
            return self.evaluate_module_gpt3full(cve_id, module, version)
        else:
            raise ValueError("Invalid evaluator.")

    def evaluate_module_heuristic(self, cve_id, module, version):
        # Placeholder for heuristic evaluation (not implemented)
        # print("Evaluating using heuristic method")
        return None
    
    def evaluate_module_gpt3full(self, cve_id, module, version):
        # Evaluate a module using GPT-3 full evaluation
        # print("Evaluating using GPT-3 full method")
        result, _ = self.gptChecker.evaluate_module(cve_id, module, version)
        return result
